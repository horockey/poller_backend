openapi: 3.0.3
info:
  title: Poller backend API
  version: 1.0.0

tags:
  - name: polls
    description: polls management
  - name: attempts
    description: attempts management
paths:
  /poll:
    get:
      tags:
        - "polls"
      parameters:
        - name: "Auth-Token"
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Poll"
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
        "400":
          description: bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
        "500":
          description: internal server err
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
    post:
      tags:
        - polls
      parameters:
        - name: "Auth-Token"
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePollRequest"
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Poll'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
        "400":
          description: bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
        "500":
          description: internal server err
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
  /poll/{id}:
    get:
      tags:
        - polls
      parameters:
        - name: "Auth-Token"
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Poll"
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
        "400":
          description: bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
        "500":
          description: internal server err
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
    put:
      tags:
        - polls
      parameters:
        - name: "Auth-Token"
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePollRequest"
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Poll'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
        "400":
          description: bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
        "500":
          description: internal server err
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
    delete:
      tags:
        - polls
      parameters:
        - name: "Auth-Token"
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Poll"
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
        "400":
          description: bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
        "500":
          description: internal server err
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
  /attempt/{poll_id}:
    post:
      tags:
        - attempts
      parameters:
        - name: "Auth-Token"
          in: header
          required: true
          schema:
            type: string
        - name: poll_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAttemptRequest'
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attempt'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
        "400":
          description: bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
        "500":
          description: internal server err
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
    get:
      tags:
        - attempts
      parameters:
        - name: "Auth-Token"
          in: header
          required: true
          schema:
            type: string
        - name: poll_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attempt'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
        "400":
          description: bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
        "500":
          description: internal server err
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"      
  /attempt/{poll_id}/{attempt_id}:
    get:
      tags:
        - attempts
      parameters:
        - name: "Auth-Token"
          in: header
          required: true
          schema:
            type: string
        - name: poll_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: attempt_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attempt'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
        "400":
          description: bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
        "500":
          description: internal server err
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
    put:
      tags:
        - attempts
      parameters:
        - name: "Auth-Token"
          in: header
          required: true
          schema:
            type: string
        - name: poll_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: attempt_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAttemptRequest'
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attempt'
        "403":
          description: forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
        "400":
          description: bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"
        "500":
          description: internal server err
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrMsg"      
components:
  schemas:
    ErrMsg:
      type: object
      properties:
        message:
          type: string
          example: "something went wrong"

    Poll:
      type: object
      allOf:
        - $ref: "#/components/schemas/CreatePollRequest"
        - type: object
          required: [id, questions, until]
          properties:
            id:
              type: string
              format: uuid
            questions:
              type: array
              items:
                $ref: "#/components/schemas/Question"

    CreatePollRequest:
      type: object
      required: [title, questions]
      properties:
        title:
          type: string
          example: "Опрос любителей пиццы"
        questions:
          type: array
          items:
              $ref: "#/components/schemas/CreateQuestionRequest"
        until:
          type: string
          format: date-time
    
    Question:
      type: object
      allOf:
      - $ref: "#/components/schemas/CreateQuestionRequest"
      - type: object
        required: [id, answers]
        properties:
          id:
            type: string
            format: uuid
          answers:
            type: array
            minItems: 1
            items:
              $ref: "#/components/schemas/Answer"

    CreateQuestionRequest:
      type: object
      required: [text, answers]
      properties:
        text:
          type: string
          example: "Вы любите пиццу?"
        answers:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/CreateAnswerRequest'
        isMultiSelect:
          type: boolean
          default: false

    CreateAnswerRequest:
      type: object
      required: [text]
      properties:
        text:
          type: string
          example: "Конечно"

    Answer:
      type: object
      allOf:
        - $ref: "#/components/schemas/CreateAnswerRequest"
        - type: object
          required: [id]
          properties:
            id:
              type: string
              format: uuid

    Attempt:
      type: object
      allOf:
        - $ref: "#/components/schemas/CreateAttemptRequest"
        - type: object
          required: [id]
          properties:
            id:
              type: string
              format: uuid

    CreateAttemptRequest:
      type: object
      required: [poll_id, answers]
      properties:
        poll_id:
          type: string
          format: uuid
        answers:
          type: array
          items:
            $ref: "#/components/schemas/Answer"
        
